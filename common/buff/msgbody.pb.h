// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgbody.proto

#ifndef PROTOBUF_msgbody_2eproto__INCLUDED
#define PROTOBUF_msgbody_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace spplus {
namespace buff {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msgbody_2eproto();
void protobuf_AssignDesc_msgbody_2eproto();
void protobuf_ShutdownFile_msgbody_2eproto();

class AttendBean;
class UserBean;
class LogDataBean;
class PutEnrollDataMsg;
class PutEnrollDataMsg_Request;
class PutEnrollDataMsg_Response;
class GetEnrollDataMsg;
class GetEnrollDataMsg_Request;
class GetEnrollDataMsg_Response;
class GetGeneralLogDataMsg;
class GetGeneralLogDataMsg_Request;
class GetGeneralLogDataMsg_Response;

// ===================================================================

class AttendBean : public ::google::protobuf::Message {
 public:
  AttendBean();
  virtual ~AttendBean();

  AttendBean(const AttendBean& from);

  inline AttendBean& operator=(const AttendBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttendBean& default_instance();

  void Swap(AttendBean* other);

  // implements Message ----------------------------------------------

  AttendBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttendBean& from);
  void MergeFrom(const AttendBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 nMachineNumber = 1;
  inline bool has_nmachinenumber() const;
  inline void clear_nmachinenumber();
  static const int kNMachineNumberFieldNumber = 1;
  inline ::google::protobuf::int64 nmachinenumber() const;
  inline void set_nmachinenumber(::google::protobuf::int64 value);

  // optional bytes ipAddr = 2;
  inline bool has_ipaddr() const;
  inline void clear_ipaddr();
  static const int kIpAddrFieldNumber = 2;
  inline const ::std::string& ipaddr() const;
  inline void set_ipaddr(const ::std::string& value);
  inline void set_ipaddr(const char* value);
  inline void set_ipaddr(const void* value, size_t size);
  inline ::std::string* mutable_ipaddr();
  inline ::std::string* release_ipaddr();
  inline void set_allocated_ipaddr(::std::string* ipaddr);

  // optional int64 nPort = 3;
  inline bool has_nport() const;
  inline void clear_nport();
  static const int kNPortFieldNumber = 3;
  inline ::google::protobuf::int64 nport() const;
  inline void set_nport(::google::protobuf::int64 value);

  // optional int64 nNetPassword = 4;
  inline bool has_nnetpassword() const;
  inline void clear_nnetpassword();
  static const int kNNetPasswordFieldNumber = 4;
  inline ::google::protobuf::int64 nnetpassword() const;
  inline void set_nnetpassword(::google::protobuf::int64 value);

  // optional int64 nLicense = 5;
  inline bool has_nlicense() const;
  inline void clear_nlicense();
  static const int kNLicenseFieldNumber = 5;
  inline ::google::protobuf::int64 nlicense() const;
  inline void set_nlicense(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.AttendBean)
 private:
  inline void set_has_nmachinenumber();
  inline void clear_has_nmachinenumber();
  inline void set_has_ipaddr();
  inline void clear_has_ipaddr();
  inline void set_has_nport();
  inline void clear_has_nport();
  inline void set_has_nnetpassword();
  inline void clear_has_nnetpassword();
  inline void set_has_nlicense();
  inline void clear_has_nlicense();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 nmachinenumber_;
  ::std::string* ipaddr_;
  ::google::protobuf::int64 nport_;
  ::google::protobuf::int64 nnetpassword_;
  ::google::protobuf::int64 nlicense_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static AttendBean* default_instance_;
};
// -------------------------------------------------------------------

class UserBean : public ::google::protobuf::Message {
 public:
  UserBean();
  virtual ~UserBean();

  UserBean(const UserBean& from);

  inline UserBean& operator=(const UserBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBean& default_instance();

  void Swap(UserBean* other);

  // implements Message ----------------------------------------------

  UserBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserBean& from);
  void MergeFrom(const UserBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 apnEnrollNumer = 1;
  inline bool has_apnenrollnumer() const;
  inline void clear_apnenrollnumer();
  static const int kApnEnrollNumerFieldNumber = 1;
  inline ::google::protobuf::int64 apnenrollnumer() const;
  inline void set_apnenrollnumer(::google::protobuf::int64 value);

  // optional int64 apnBackUpNumber = 2;
  inline bool has_apnbackupnumber() const;
  inline void clear_apnbackupnumber();
  static const int kApnBackUpNumberFieldNumber = 2;
  inline ::google::protobuf::int64 apnbackupnumber() const;
  inline void set_apnbackupnumber(::google::protobuf::int64 value);

  // optional int64 apnMechinePrivilege = 3;
  inline bool has_apnmechineprivilege() const;
  inline void clear_apnmechineprivilege();
  static const int kApnMechinePrivilegeFieldNumber = 3;
  inline ::google::protobuf::int64 apnmechineprivilege() const;
  inline void set_apnmechineprivilege(::google::protobuf::int64 value);

  // optional int64 apnEnableFlage = 4;
  inline bool has_apnenableflage() const;
  inline void clear_apnenableflage();
  static const int kApnEnableFlageFieldNumber = 4;
  inline ::google::protobuf::int64 apnenableflage() const;
  inline void set_apnenableflage(::google::protobuf::int64 value);

  // optional int64 apnEnrollData = 5;
  inline bool has_apnenrolldata() const;
  inline void clear_apnenrolldata();
  static const int kApnEnrollDataFieldNumber = 5;
  inline ::google::protobuf::int64 apnenrolldata() const;
  inline void set_apnenrolldata(::google::protobuf::int64 value);

  // optional int64 apnPassWord = 6;
  inline bool has_apnpassword() const;
  inline void clear_apnpassword();
  static const int kApnPassWordFieldNumber = 6;
  inline ::google::protobuf::int64 apnpassword() const;
  inline void set_apnpassword(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.UserBean)
 private:
  inline void set_has_apnenrollnumer();
  inline void clear_has_apnenrollnumer();
  inline void set_has_apnbackupnumber();
  inline void clear_has_apnbackupnumber();
  inline void set_has_apnmechineprivilege();
  inline void clear_has_apnmechineprivilege();
  inline void set_has_apnenableflage();
  inline void clear_has_apnenableflage();
  inline void set_has_apnenrolldata();
  inline void clear_has_apnenrolldata();
  inline void set_has_apnpassword();
  inline void clear_has_apnpassword();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 apnenrollnumer_;
  ::google::protobuf::int64 apnbackupnumber_;
  ::google::protobuf::int64 apnmechineprivilege_;
  ::google::protobuf::int64 apnenableflage_;
  ::google::protobuf::int64 apnenrolldata_;
  ::google::protobuf::int64 apnpassword_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static UserBean* default_instance_;
};
// -------------------------------------------------------------------

class LogDataBean : public ::google::protobuf::Message {
 public:
  LogDataBean();
  virtual ~LogDataBean();

  LogDataBean(const LogDataBean& from);

  inline LogDataBean& operator=(const LogDataBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogDataBean& default_instance();

  void Swap(LogDataBean* other);

  // implements Message ----------------------------------------------

  LogDataBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogDataBean& from);
  void MergeFrom(const LogDataBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 apnEnrollNumer = 1;
  inline bool has_apnenrollnumer() const;
  inline void clear_apnenrollnumer();
  static const int kApnEnrollNumerFieldNumber = 1;
  inline ::google::protobuf::int64 apnenrollnumer() const;
  inline void set_apnenrollnumer(::google::protobuf::int64 value);

  // optional int64 apnVerifyMode = 2;
  inline bool has_apnverifymode() const;
  inline void clear_apnverifymode();
  static const int kApnVerifyModeFieldNumber = 2;
  inline ::google::protobuf::int64 apnverifymode() const;
  inline void set_apnverifymode(::google::protobuf::int64 value);

  // optional int64 apnInOutMode = 3;
  inline bool has_apninoutmode() const;
  inline void clear_apninoutmode();
  static const int kApnInOutModeFieldNumber = 3;
  inline ::google::protobuf::int64 apninoutmode() const;
  inline void set_apninoutmode(::google::protobuf::int64 value);

  // optional bytes apnDateTime = 4;
  inline bool has_apndatetime() const;
  inline void clear_apndatetime();
  static const int kApnDateTimeFieldNumber = 4;
  inline const ::std::string& apndatetime() const;
  inline void set_apndatetime(const ::std::string& value);
  inline void set_apndatetime(const char* value);
  inline void set_apndatetime(const void* value, size_t size);
  inline ::std::string* mutable_apndatetime();
  inline ::std::string* release_apndatetime();
  inline void set_allocated_apndatetime(::std::string* apndatetime);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.LogDataBean)
 private:
  inline void set_has_apnenrollnumer();
  inline void clear_has_apnenrollnumer();
  inline void set_has_apnverifymode();
  inline void clear_has_apnverifymode();
  inline void set_has_apninoutmode();
  inline void clear_has_apninoutmode();
  inline void set_has_apndatetime();
  inline void clear_has_apndatetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 apnenrollnumer_;
  ::google::protobuf::int64 apnverifymode_;
  ::google::protobuf::int64 apninoutmode_;
  ::std::string* apndatetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static LogDataBean* default_instance_;
};
// -------------------------------------------------------------------

class PutEnrollDataMsg_Request : public ::google::protobuf::Message {
 public:
  PutEnrollDataMsg_Request();
  virtual ~PutEnrollDataMsg_Request();

  PutEnrollDataMsg_Request(const PutEnrollDataMsg_Request& from);

  inline PutEnrollDataMsg_Request& operator=(const PutEnrollDataMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutEnrollDataMsg_Request& default_instance();

  void Swap(PutEnrollDataMsg_Request* other);

  // implements Message ----------------------------------------------

  PutEnrollDataMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutEnrollDataMsg_Request& from);
  void MergeFrom(const PutEnrollDataMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.UserBean user = 1;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 1;
  inline const ::com::spplus::buff::UserBean& user() const;
  inline ::com::spplus::buff::UserBean* mutable_user();
  inline ::com::spplus::buff::UserBean* release_user();
  inline void set_allocated_user(::com::spplus::buff::UserBean* user);

  // optional .com.spplus.buff.AttendBean attend = 2;
  inline bool has_attend() const;
  inline void clear_attend();
  static const int kAttendFieldNumber = 2;
  inline const ::com::spplus::buff::AttendBean& attend() const;
  inline ::com::spplus::buff::AttendBean* mutable_attend();
  inline ::com::spplus::buff::AttendBean* release_attend();
  inline void set_allocated_attend(::com::spplus::buff::AttendBean* attend);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.PutEnrollDataMsg.Request)
 private:
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_attend();
  inline void clear_has_attend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::UserBean* user_;
  ::com::spplus::buff::AttendBean* attend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static PutEnrollDataMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class PutEnrollDataMsg_Response : public ::google::protobuf::Message {
 public:
  PutEnrollDataMsg_Response();
  virtual ~PutEnrollDataMsg_Response();

  PutEnrollDataMsg_Response(const PutEnrollDataMsg_Response& from);

  inline PutEnrollDataMsg_Response& operator=(const PutEnrollDataMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutEnrollDataMsg_Response& default_instance();

  void Swap(PutEnrollDataMsg_Response* other);

  // implements Message ----------------------------------------------

  PutEnrollDataMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutEnrollDataMsg_Response& from);
  void MergeFrom(const PutEnrollDataMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rescode = 1;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.PutEnrollDataMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static PutEnrollDataMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class PutEnrollDataMsg : public ::google::protobuf::Message {
 public:
  PutEnrollDataMsg();
  virtual ~PutEnrollDataMsg();

  PutEnrollDataMsg(const PutEnrollDataMsg& from);

  inline PutEnrollDataMsg& operator=(const PutEnrollDataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutEnrollDataMsg& default_instance();

  void Swap(PutEnrollDataMsg* other);

  // implements Message ----------------------------------------------

  PutEnrollDataMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutEnrollDataMsg& from);
  void MergeFrom(const PutEnrollDataMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PutEnrollDataMsg_Request Request;
  typedef PutEnrollDataMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.PutEnrollDataMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::PutEnrollDataMsg_Request& request() const;
  inline ::com::spplus::buff::PutEnrollDataMsg_Request* mutable_request();
  inline ::com::spplus::buff::PutEnrollDataMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::PutEnrollDataMsg_Request* request);

  // optional .com.spplus.buff.PutEnrollDataMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::PutEnrollDataMsg_Response& response() const;
  inline ::com::spplus::buff::PutEnrollDataMsg_Response* mutable_response();
  inline ::com::spplus::buff::PutEnrollDataMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::PutEnrollDataMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.PutEnrollDataMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::PutEnrollDataMsg_Request* request_;
  ::com::spplus::buff::PutEnrollDataMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static PutEnrollDataMsg* default_instance_;
};
// -------------------------------------------------------------------

class GetEnrollDataMsg_Request : public ::google::protobuf::Message {
 public:
  GetEnrollDataMsg_Request();
  virtual ~GetEnrollDataMsg_Request();

  GetEnrollDataMsg_Request(const GetEnrollDataMsg_Request& from);

  inline GetEnrollDataMsg_Request& operator=(const GetEnrollDataMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEnrollDataMsg_Request& default_instance();

  void Swap(GetEnrollDataMsg_Request* other);

  // implements Message ----------------------------------------------

  GetEnrollDataMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEnrollDataMsg_Request& from);
  void MergeFrom(const GetEnrollDataMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 apnEnrollNumer = 1;
  inline bool has_apnenrollnumer() const;
  inline void clear_apnenrollnumer();
  static const int kApnEnrollNumerFieldNumber = 1;
  inline ::google::protobuf::int64 apnenrollnumer() const;
  inline void set_apnenrollnumer(::google::protobuf::int64 value);

  // optional .com.spplus.buff.AttendBean attend = 2;
  inline bool has_attend() const;
  inline void clear_attend();
  static const int kAttendFieldNumber = 2;
  inline const ::com::spplus::buff::AttendBean& attend() const;
  inline ::com::spplus::buff::AttendBean* mutable_attend();
  inline ::com::spplus::buff::AttendBean* release_attend();
  inline void set_allocated_attend(::com::spplus::buff::AttendBean* attend);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.GetEnrollDataMsg.Request)
 private:
  inline void set_has_apnenrollnumer();
  inline void clear_has_apnenrollnumer();
  inline void set_has_attend();
  inline void clear_has_attend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 apnenrollnumer_;
  ::com::spplus::buff::AttendBean* attend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static GetEnrollDataMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class GetEnrollDataMsg_Response : public ::google::protobuf::Message {
 public:
  GetEnrollDataMsg_Response();
  virtual ~GetEnrollDataMsg_Response();

  GetEnrollDataMsg_Response(const GetEnrollDataMsg_Response& from);

  inline GetEnrollDataMsg_Response& operator=(const GetEnrollDataMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEnrollDataMsg_Response& default_instance();

  void Swap(GetEnrollDataMsg_Response* other);

  // implements Message ----------------------------------------------

  GetEnrollDataMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEnrollDataMsg_Response& from);
  void MergeFrom(const GetEnrollDataMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.UserBean user = 1;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 1;
  inline const ::com::spplus::buff::UserBean& user() const;
  inline ::com::spplus::buff::UserBean* mutable_user();
  inline ::com::spplus::buff::UserBean* release_user();
  inline void set_allocated_user(::com::spplus::buff::UserBean* user);

  // optional uint32 rescode = 2;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.GetEnrollDataMsg.Response)
 private:
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::UserBean* user_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static GetEnrollDataMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class GetEnrollDataMsg : public ::google::protobuf::Message {
 public:
  GetEnrollDataMsg();
  virtual ~GetEnrollDataMsg();

  GetEnrollDataMsg(const GetEnrollDataMsg& from);

  inline GetEnrollDataMsg& operator=(const GetEnrollDataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEnrollDataMsg& default_instance();

  void Swap(GetEnrollDataMsg* other);

  // implements Message ----------------------------------------------

  GetEnrollDataMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEnrollDataMsg& from);
  void MergeFrom(const GetEnrollDataMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetEnrollDataMsg_Request Request;
  typedef GetEnrollDataMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.GetEnrollDataMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::GetEnrollDataMsg_Request& request() const;
  inline ::com::spplus::buff::GetEnrollDataMsg_Request* mutable_request();
  inline ::com::spplus::buff::GetEnrollDataMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::GetEnrollDataMsg_Request* request);

  // optional .com.spplus.buff.GetEnrollDataMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::GetEnrollDataMsg_Response& response() const;
  inline ::com::spplus::buff::GetEnrollDataMsg_Response* mutable_response();
  inline ::com::spplus::buff::GetEnrollDataMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::GetEnrollDataMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.GetEnrollDataMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::GetEnrollDataMsg_Request* request_;
  ::com::spplus::buff::GetEnrollDataMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static GetEnrollDataMsg* default_instance_;
};
// -------------------------------------------------------------------

class GetGeneralLogDataMsg_Request : public ::google::protobuf::Message {
 public:
  GetGeneralLogDataMsg_Request();
  virtual ~GetGeneralLogDataMsg_Request();

  GetGeneralLogDataMsg_Request(const GetGeneralLogDataMsg_Request& from);

  inline GetGeneralLogDataMsg_Request& operator=(const GetGeneralLogDataMsg_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGeneralLogDataMsg_Request& default_instance();

  void Swap(GetGeneralLogDataMsg_Request* other);

  // implements Message ----------------------------------------------

  GetGeneralLogDataMsg_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGeneralLogDataMsg_Request& from);
  void MergeFrom(const GetGeneralLogDataMsg_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.AttendBean attend = 1;
  inline bool has_attend() const;
  inline void clear_attend();
  static const int kAttendFieldNumber = 1;
  inline const ::com::spplus::buff::AttendBean& attend() const;
  inline ::com::spplus::buff::AttendBean* mutable_attend();
  inline ::com::spplus::buff::AttendBean* release_attend();
  inline void set_allocated_attend(::com::spplus::buff::AttendBean* attend);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.GetGeneralLogDataMsg.Request)
 private:
  inline void set_has_attend();
  inline void clear_has_attend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::AttendBean* attend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static GetGeneralLogDataMsg_Request* default_instance_;
};
// -------------------------------------------------------------------

class GetGeneralLogDataMsg_Response : public ::google::protobuf::Message {
 public:
  GetGeneralLogDataMsg_Response();
  virtual ~GetGeneralLogDataMsg_Response();

  GetGeneralLogDataMsg_Response(const GetGeneralLogDataMsg_Response& from);

  inline GetGeneralLogDataMsg_Response& operator=(const GetGeneralLogDataMsg_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGeneralLogDataMsg_Response& default_instance();

  void Swap(GetGeneralLogDataMsg_Response* other);

  // implements Message ----------------------------------------------

  GetGeneralLogDataMsg_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGeneralLogDataMsg_Response& from);
  void MergeFrom(const GetGeneralLogDataMsg_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.spplus.buff.LogDataBean logrec = 1;
  inline int logrec_size() const;
  inline void clear_logrec();
  static const int kLogrecFieldNumber = 1;
  inline const ::com::spplus::buff::LogDataBean& logrec(int index) const;
  inline ::com::spplus::buff::LogDataBean* mutable_logrec(int index);
  inline ::com::spplus::buff::LogDataBean* add_logrec();
  inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::LogDataBean >&
      logrec() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::LogDataBean >*
      mutable_logrec();

  // optional uint32 rescode = 2;
  inline bool has_rescode() const;
  inline void clear_rescode();
  static const int kRescodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rescode() const;
  inline void set_rescode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.GetGeneralLogDataMsg.Response)
 private:
  inline void set_has_rescode();
  inline void clear_has_rescode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::LogDataBean > logrec_;
  ::google::protobuf::uint32 rescode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static GetGeneralLogDataMsg_Response* default_instance_;
};
// -------------------------------------------------------------------

class GetGeneralLogDataMsg : public ::google::protobuf::Message {
 public:
  GetGeneralLogDataMsg();
  virtual ~GetGeneralLogDataMsg();

  GetGeneralLogDataMsg(const GetGeneralLogDataMsg& from);

  inline GetGeneralLogDataMsg& operator=(const GetGeneralLogDataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGeneralLogDataMsg& default_instance();

  void Swap(GetGeneralLogDataMsg* other);

  // implements Message ----------------------------------------------

  GetGeneralLogDataMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGeneralLogDataMsg& from);
  void MergeFrom(const GetGeneralLogDataMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetGeneralLogDataMsg_Request Request;
  typedef GetGeneralLogDataMsg_Response Response;

  // accessors -------------------------------------------------------

  // optional .com.spplus.buff.GetGeneralLogDataMsg.Request request = 1;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::com::spplus::buff::GetGeneralLogDataMsg_Request& request() const;
  inline ::com::spplus::buff::GetGeneralLogDataMsg_Request* mutable_request();
  inline ::com::spplus::buff::GetGeneralLogDataMsg_Request* release_request();
  inline void set_allocated_request(::com::spplus::buff::GetGeneralLogDataMsg_Request* request);

  // optional .com.spplus.buff.GetGeneralLogDataMsg.Response response = 2;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 2;
  inline const ::com::spplus::buff::GetGeneralLogDataMsg_Response& response() const;
  inline ::com::spplus::buff::GetGeneralLogDataMsg_Response* mutable_response();
  inline ::com::spplus::buff::GetGeneralLogDataMsg_Response* release_response();
  inline void set_allocated_response(::com::spplus::buff::GetGeneralLogDataMsg_Response* response);

  // @@protoc_insertion_point(class_scope:com.spplus.buff.GetGeneralLogDataMsg)
 private:
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::com::spplus::buff::GetGeneralLogDataMsg_Request* request_;
  ::com::spplus::buff::GetGeneralLogDataMsg_Response* response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msgbody_2eproto();
  friend void protobuf_AssignDesc_msgbody_2eproto();
  friend void protobuf_ShutdownFile_msgbody_2eproto();

  void InitAsDefaultInstance();
  static GetGeneralLogDataMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// AttendBean

// optional int64 nMachineNumber = 1;
inline bool AttendBean::has_nmachinenumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttendBean::set_has_nmachinenumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttendBean::clear_has_nmachinenumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttendBean::clear_nmachinenumber() {
  nmachinenumber_ = GOOGLE_LONGLONG(0);
  clear_has_nmachinenumber();
}
inline ::google::protobuf::int64 AttendBean::nmachinenumber() const {
  return nmachinenumber_;
}
inline void AttendBean::set_nmachinenumber(::google::protobuf::int64 value) {
  set_has_nmachinenumber();
  nmachinenumber_ = value;
}

// optional bytes ipAddr = 2;
inline bool AttendBean::has_ipaddr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttendBean::set_has_ipaddr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttendBean::clear_has_ipaddr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttendBean::clear_ipaddr() {
  if (ipaddr_ != &::google::protobuf::internal::kEmptyString) {
    ipaddr_->clear();
  }
  clear_has_ipaddr();
}
inline const ::std::string& AttendBean::ipaddr() const {
  return *ipaddr_;
}
inline void AttendBean::set_ipaddr(const ::std::string& value) {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(value);
}
inline void AttendBean::set_ipaddr(const char* value) {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(value);
}
inline void AttendBean::set_ipaddr(const void* value, size_t size) {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AttendBean::mutable_ipaddr() {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  return ipaddr_;
}
inline ::std::string* AttendBean::release_ipaddr() {
  clear_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ipaddr_;
    ipaddr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AttendBean::set_allocated_ipaddr(::std::string* ipaddr) {
  if (ipaddr_ != &::google::protobuf::internal::kEmptyString) {
    delete ipaddr_;
  }
  if (ipaddr) {
    set_has_ipaddr();
    ipaddr_ = ipaddr;
  } else {
    clear_has_ipaddr();
    ipaddr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 nPort = 3;
inline bool AttendBean::has_nport() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttendBean::set_has_nport() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttendBean::clear_has_nport() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttendBean::clear_nport() {
  nport_ = GOOGLE_LONGLONG(0);
  clear_has_nport();
}
inline ::google::protobuf::int64 AttendBean::nport() const {
  return nport_;
}
inline void AttendBean::set_nport(::google::protobuf::int64 value) {
  set_has_nport();
  nport_ = value;
}

// optional int64 nNetPassword = 4;
inline bool AttendBean::has_nnetpassword() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AttendBean::set_has_nnetpassword() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AttendBean::clear_has_nnetpassword() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AttendBean::clear_nnetpassword() {
  nnetpassword_ = GOOGLE_LONGLONG(0);
  clear_has_nnetpassword();
}
inline ::google::protobuf::int64 AttendBean::nnetpassword() const {
  return nnetpassword_;
}
inline void AttendBean::set_nnetpassword(::google::protobuf::int64 value) {
  set_has_nnetpassword();
  nnetpassword_ = value;
}

// optional int64 nLicense = 5;
inline bool AttendBean::has_nlicense() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AttendBean::set_has_nlicense() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AttendBean::clear_has_nlicense() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AttendBean::clear_nlicense() {
  nlicense_ = GOOGLE_LONGLONG(0);
  clear_has_nlicense();
}
inline ::google::protobuf::int64 AttendBean::nlicense() const {
  return nlicense_;
}
inline void AttendBean::set_nlicense(::google::protobuf::int64 value) {
  set_has_nlicense();
  nlicense_ = value;
}

// -------------------------------------------------------------------

// UserBean

// optional int64 apnEnrollNumer = 1;
inline bool UserBean::has_apnenrollnumer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserBean::set_has_apnenrollnumer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserBean::clear_has_apnenrollnumer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserBean::clear_apnenrollnumer() {
  apnenrollnumer_ = GOOGLE_LONGLONG(0);
  clear_has_apnenrollnumer();
}
inline ::google::protobuf::int64 UserBean::apnenrollnumer() const {
  return apnenrollnumer_;
}
inline void UserBean::set_apnenrollnumer(::google::protobuf::int64 value) {
  set_has_apnenrollnumer();
  apnenrollnumer_ = value;
}

// optional int64 apnBackUpNumber = 2;
inline bool UserBean::has_apnbackupnumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserBean::set_has_apnbackupnumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserBean::clear_has_apnbackupnumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserBean::clear_apnbackupnumber() {
  apnbackupnumber_ = GOOGLE_LONGLONG(0);
  clear_has_apnbackupnumber();
}
inline ::google::protobuf::int64 UserBean::apnbackupnumber() const {
  return apnbackupnumber_;
}
inline void UserBean::set_apnbackupnumber(::google::protobuf::int64 value) {
  set_has_apnbackupnumber();
  apnbackupnumber_ = value;
}

// optional int64 apnMechinePrivilege = 3;
inline bool UserBean::has_apnmechineprivilege() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserBean::set_has_apnmechineprivilege() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserBean::clear_has_apnmechineprivilege() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserBean::clear_apnmechineprivilege() {
  apnmechineprivilege_ = GOOGLE_LONGLONG(0);
  clear_has_apnmechineprivilege();
}
inline ::google::protobuf::int64 UserBean::apnmechineprivilege() const {
  return apnmechineprivilege_;
}
inline void UserBean::set_apnmechineprivilege(::google::protobuf::int64 value) {
  set_has_apnmechineprivilege();
  apnmechineprivilege_ = value;
}

// optional int64 apnEnableFlage = 4;
inline bool UserBean::has_apnenableflage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserBean::set_has_apnenableflage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserBean::clear_has_apnenableflage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserBean::clear_apnenableflage() {
  apnenableflage_ = GOOGLE_LONGLONG(0);
  clear_has_apnenableflage();
}
inline ::google::protobuf::int64 UserBean::apnenableflage() const {
  return apnenableflage_;
}
inline void UserBean::set_apnenableflage(::google::protobuf::int64 value) {
  set_has_apnenableflage();
  apnenableflage_ = value;
}

// optional int64 apnEnrollData = 5;
inline bool UserBean::has_apnenrolldata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserBean::set_has_apnenrolldata() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserBean::clear_has_apnenrolldata() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserBean::clear_apnenrolldata() {
  apnenrolldata_ = GOOGLE_LONGLONG(0);
  clear_has_apnenrolldata();
}
inline ::google::protobuf::int64 UserBean::apnenrolldata() const {
  return apnenrolldata_;
}
inline void UserBean::set_apnenrolldata(::google::protobuf::int64 value) {
  set_has_apnenrolldata();
  apnenrolldata_ = value;
}

// optional int64 apnPassWord = 6;
inline bool UserBean::has_apnpassword() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserBean::set_has_apnpassword() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserBean::clear_has_apnpassword() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserBean::clear_apnpassword() {
  apnpassword_ = GOOGLE_LONGLONG(0);
  clear_has_apnpassword();
}
inline ::google::protobuf::int64 UserBean::apnpassword() const {
  return apnpassword_;
}
inline void UserBean::set_apnpassword(::google::protobuf::int64 value) {
  set_has_apnpassword();
  apnpassword_ = value;
}

// -------------------------------------------------------------------

// LogDataBean

// optional int64 apnEnrollNumer = 1;
inline bool LogDataBean::has_apnenrollnumer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogDataBean::set_has_apnenrollnumer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogDataBean::clear_has_apnenrollnumer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogDataBean::clear_apnenrollnumer() {
  apnenrollnumer_ = GOOGLE_LONGLONG(0);
  clear_has_apnenrollnumer();
}
inline ::google::protobuf::int64 LogDataBean::apnenrollnumer() const {
  return apnenrollnumer_;
}
inline void LogDataBean::set_apnenrollnumer(::google::protobuf::int64 value) {
  set_has_apnenrollnumer();
  apnenrollnumer_ = value;
}

// optional int64 apnVerifyMode = 2;
inline bool LogDataBean::has_apnverifymode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogDataBean::set_has_apnverifymode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogDataBean::clear_has_apnverifymode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogDataBean::clear_apnverifymode() {
  apnverifymode_ = GOOGLE_LONGLONG(0);
  clear_has_apnverifymode();
}
inline ::google::protobuf::int64 LogDataBean::apnverifymode() const {
  return apnverifymode_;
}
inline void LogDataBean::set_apnverifymode(::google::protobuf::int64 value) {
  set_has_apnverifymode();
  apnverifymode_ = value;
}

// optional int64 apnInOutMode = 3;
inline bool LogDataBean::has_apninoutmode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogDataBean::set_has_apninoutmode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogDataBean::clear_has_apninoutmode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogDataBean::clear_apninoutmode() {
  apninoutmode_ = GOOGLE_LONGLONG(0);
  clear_has_apninoutmode();
}
inline ::google::protobuf::int64 LogDataBean::apninoutmode() const {
  return apninoutmode_;
}
inline void LogDataBean::set_apninoutmode(::google::protobuf::int64 value) {
  set_has_apninoutmode();
  apninoutmode_ = value;
}

// optional bytes apnDateTime = 4;
inline bool LogDataBean::has_apndatetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogDataBean::set_has_apndatetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogDataBean::clear_has_apndatetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogDataBean::clear_apndatetime() {
  if (apndatetime_ != &::google::protobuf::internal::kEmptyString) {
    apndatetime_->clear();
  }
  clear_has_apndatetime();
}
inline const ::std::string& LogDataBean::apndatetime() const {
  return *apndatetime_;
}
inline void LogDataBean::set_apndatetime(const ::std::string& value) {
  set_has_apndatetime();
  if (apndatetime_ == &::google::protobuf::internal::kEmptyString) {
    apndatetime_ = new ::std::string;
  }
  apndatetime_->assign(value);
}
inline void LogDataBean::set_apndatetime(const char* value) {
  set_has_apndatetime();
  if (apndatetime_ == &::google::protobuf::internal::kEmptyString) {
    apndatetime_ = new ::std::string;
  }
  apndatetime_->assign(value);
}
inline void LogDataBean::set_apndatetime(const void* value, size_t size) {
  set_has_apndatetime();
  if (apndatetime_ == &::google::protobuf::internal::kEmptyString) {
    apndatetime_ = new ::std::string;
  }
  apndatetime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LogDataBean::mutable_apndatetime() {
  set_has_apndatetime();
  if (apndatetime_ == &::google::protobuf::internal::kEmptyString) {
    apndatetime_ = new ::std::string;
  }
  return apndatetime_;
}
inline ::std::string* LogDataBean::release_apndatetime() {
  clear_has_apndatetime();
  if (apndatetime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = apndatetime_;
    apndatetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LogDataBean::set_allocated_apndatetime(::std::string* apndatetime) {
  if (apndatetime_ != &::google::protobuf::internal::kEmptyString) {
    delete apndatetime_;
  }
  if (apndatetime) {
    set_has_apndatetime();
    apndatetime_ = apndatetime;
  } else {
    clear_has_apndatetime();
    apndatetime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PutEnrollDataMsg_Request

// optional .com.spplus.buff.UserBean user = 1;
inline bool PutEnrollDataMsg_Request::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutEnrollDataMsg_Request::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutEnrollDataMsg_Request::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutEnrollDataMsg_Request::clear_user() {
  if (user_ != NULL) user_->::com::spplus::buff::UserBean::Clear();
  clear_has_user();
}
inline const ::com::spplus::buff::UserBean& PutEnrollDataMsg_Request::user() const {
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::com::spplus::buff::UserBean* PutEnrollDataMsg_Request::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::com::spplus::buff::UserBean;
  return user_;
}
inline ::com::spplus::buff::UserBean* PutEnrollDataMsg_Request::release_user() {
  clear_has_user();
  ::com::spplus::buff::UserBean* temp = user_;
  user_ = NULL;
  return temp;
}
inline void PutEnrollDataMsg_Request::set_allocated_user(::com::spplus::buff::UserBean* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
}

// optional .com.spplus.buff.AttendBean attend = 2;
inline bool PutEnrollDataMsg_Request::has_attend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutEnrollDataMsg_Request::set_has_attend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutEnrollDataMsg_Request::clear_has_attend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutEnrollDataMsg_Request::clear_attend() {
  if (attend_ != NULL) attend_->::com::spplus::buff::AttendBean::Clear();
  clear_has_attend();
}
inline const ::com::spplus::buff::AttendBean& PutEnrollDataMsg_Request::attend() const {
  return attend_ != NULL ? *attend_ : *default_instance_->attend_;
}
inline ::com::spplus::buff::AttendBean* PutEnrollDataMsg_Request::mutable_attend() {
  set_has_attend();
  if (attend_ == NULL) attend_ = new ::com::spplus::buff::AttendBean;
  return attend_;
}
inline ::com::spplus::buff::AttendBean* PutEnrollDataMsg_Request::release_attend() {
  clear_has_attend();
  ::com::spplus::buff::AttendBean* temp = attend_;
  attend_ = NULL;
  return temp;
}
inline void PutEnrollDataMsg_Request::set_allocated_attend(::com::spplus::buff::AttendBean* attend) {
  delete attend_;
  attend_ = attend;
  if (attend) {
    set_has_attend();
  } else {
    clear_has_attend();
  }
}

// -------------------------------------------------------------------

// PutEnrollDataMsg_Response

// optional uint32 rescode = 1;
inline bool PutEnrollDataMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutEnrollDataMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutEnrollDataMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutEnrollDataMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 PutEnrollDataMsg_Response::rescode() const {
  return rescode_;
}
inline void PutEnrollDataMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// PutEnrollDataMsg

// optional .com.spplus.buff.PutEnrollDataMsg.Request request = 1;
inline bool PutEnrollDataMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutEnrollDataMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutEnrollDataMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutEnrollDataMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::PutEnrollDataMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::PutEnrollDataMsg_Request& PutEnrollDataMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::PutEnrollDataMsg_Request* PutEnrollDataMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::PutEnrollDataMsg_Request;
  return request_;
}
inline ::com::spplus::buff::PutEnrollDataMsg_Request* PutEnrollDataMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::PutEnrollDataMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void PutEnrollDataMsg::set_allocated_request(::com::spplus::buff::PutEnrollDataMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.PutEnrollDataMsg.Response response = 2;
inline bool PutEnrollDataMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutEnrollDataMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutEnrollDataMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutEnrollDataMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::PutEnrollDataMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::PutEnrollDataMsg_Response& PutEnrollDataMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::PutEnrollDataMsg_Response* PutEnrollDataMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::PutEnrollDataMsg_Response;
  return response_;
}
inline ::com::spplus::buff::PutEnrollDataMsg_Response* PutEnrollDataMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::PutEnrollDataMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void PutEnrollDataMsg::set_allocated_response(::com::spplus::buff::PutEnrollDataMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// GetEnrollDataMsg_Request

// optional int64 apnEnrollNumer = 1;
inline bool GetEnrollDataMsg_Request::has_apnenrollnumer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetEnrollDataMsg_Request::set_has_apnenrollnumer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetEnrollDataMsg_Request::clear_has_apnenrollnumer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetEnrollDataMsg_Request::clear_apnenrollnumer() {
  apnenrollnumer_ = GOOGLE_LONGLONG(0);
  clear_has_apnenrollnumer();
}
inline ::google::protobuf::int64 GetEnrollDataMsg_Request::apnenrollnumer() const {
  return apnenrollnumer_;
}
inline void GetEnrollDataMsg_Request::set_apnenrollnumer(::google::protobuf::int64 value) {
  set_has_apnenrollnumer();
  apnenrollnumer_ = value;
}

// optional .com.spplus.buff.AttendBean attend = 2;
inline bool GetEnrollDataMsg_Request::has_attend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetEnrollDataMsg_Request::set_has_attend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetEnrollDataMsg_Request::clear_has_attend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetEnrollDataMsg_Request::clear_attend() {
  if (attend_ != NULL) attend_->::com::spplus::buff::AttendBean::Clear();
  clear_has_attend();
}
inline const ::com::spplus::buff::AttendBean& GetEnrollDataMsg_Request::attend() const {
  return attend_ != NULL ? *attend_ : *default_instance_->attend_;
}
inline ::com::spplus::buff::AttendBean* GetEnrollDataMsg_Request::mutable_attend() {
  set_has_attend();
  if (attend_ == NULL) attend_ = new ::com::spplus::buff::AttendBean;
  return attend_;
}
inline ::com::spplus::buff::AttendBean* GetEnrollDataMsg_Request::release_attend() {
  clear_has_attend();
  ::com::spplus::buff::AttendBean* temp = attend_;
  attend_ = NULL;
  return temp;
}
inline void GetEnrollDataMsg_Request::set_allocated_attend(::com::spplus::buff::AttendBean* attend) {
  delete attend_;
  attend_ = attend;
  if (attend) {
    set_has_attend();
  } else {
    clear_has_attend();
  }
}

// -------------------------------------------------------------------

// GetEnrollDataMsg_Response

// optional .com.spplus.buff.UserBean user = 1;
inline bool GetEnrollDataMsg_Response::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetEnrollDataMsg_Response::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetEnrollDataMsg_Response::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetEnrollDataMsg_Response::clear_user() {
  if (user_ != NULL) user_->::com::spplus::buff::UserBean::Clear();
  clear_has_user();
}
inline const ::com::spplus::buff::UserBean& GetEnrollDataMsg_Response::user() const {
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::com::spplus::buff::UserBean* GetEnrollDataMsg_Response::mutable_user() {
  set_has_user();
  if (user_ == NULL) user_ = new ::com::spplus::buff::UserBean;
  return user_;
}
inline ::com::spplus::buff::UserBean* GetEnrollDataMsg_Response::release_user() {
  clear_has_user();
  ::com::spplus::buff::UserBean* temp = user_;
  user_ = NULL;
  return temp;
}
inline void GetEnrollDataMsg_Response::set_allocated_user(::com::spplus::buff::UserBean* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
}

// optional uint32 rescode = 2;
inline bool GetEnrollDataMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetEnrollDataMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetEnrollDataMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetEnrollDataMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 GetEnrollDataMsg_Response::rescode() const {
  return rescode_;
}
inline void GetEnrollDataMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// GetEnrollDataMsg

// optional .com.spplus.buff.GetEnrollDataMsg.Request request = 1;
inline bool GetEnrollDataMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetEnrollDataMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetEnrollDataMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetEnrollDataMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::GetEnrollDataMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::GetEnrollDataMsg_Request& GetEnrollDataMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::GetEnrollDataMsg_Request* GetEnrollDataMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::GetEnrollDataMsg_Request;
  return request_;
}
inline ::com::spplus::buff::GetEnrollDataMsg_Request* GetEnrollDataMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::GetEnrollDataMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void GetEnrollDataMsg::set_allocated_request(::com::spplus::buff::GetEnrollDataMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.GetEnrollDataMsg.Response response = 2;
inline bool GetEnrollDataMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetEnrollDataMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetEnrollDataMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetEnrollDataMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::GetEnrollDataMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::GetEnrollDataMsg_Response& GetEnrollDataMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::GetEnrollDataMsg_Response* GetEnrollDataMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::GetEnrollDataMsg_Response;
  return response_;
}
inline ::com::spplus::buff::GetEnrollDataMsg_Response* GetEnrollDataMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::GetEnrollDataMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void GetEnrollDataMsg::set_allocated_response(::com::spplus::buff::GetEnrollDataMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}

// -------------------------------------------------------------------

// GetGeneralLogDataMsg_Request

// optional .com.spplus.buff.AttendBean attend = 1;
inline bool GetGeneralLogDataMsg_Request::has_attend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGeneralLogDataMsg_Request::set_has_attend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGeneralLogDataMsg_Request::clear_has_attend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGeneralLogDataMsg_Request::clear_attend() {
  if (attend_ != NULL) attend_->::com::spplus::buff::AttendBean::Clear();
  clear_has_attend();
}
inline const ::com::spplus::buff::AttendBean& GetGeneralLogDataMsg_Request::attend() const {
  return attend_ != NULL ? *attend_ : *default_instance_->attend_;
}
inline ::com::spplus::buff::AttendBean* GetGeneralLogDataMsg_Request::mutable_attend() {
  set_has_attend();
  if (attend_ == NULL) attend_ = new ::com::spplus::buff::AttendBean;
  return attend_;
}
inline ::com::spplus::buff::AttendBean* GetGeneralLogDataMsg_Request::release_attend() {
  clear_has_attend();
  ::com::spplus::buff::AttendBean* temp = attend_;
  attend_ = NULL;
  return temp;
}
inline void GetGeneralLogDataMsg_Request::set_allocated_attend(::com::spplus::buff::AttendBean* attend) {
  delete attend_;
  attend_ = attend;
  if (attend) {
    set_has_attend();
  } else {
    clear_has_attend();
  }
}

// -------------------------------------------------------------------

// GetGeneralLogDataMsg_Response

// repeated .com.spplus.buff.LogDataBean logrec = 1;
inline int GetGeneralLogDataMsg_Response::logrec_size() const {
  return logrec_.size();
}
inline void GetGeneralLogDataMsg_Response::clear_logrec() {
  logrec_.Clear();
}
inline const ::com::spplus::buff::LogDataBean& GetGeneralLogDataMsg_Response::logrec(int index) const {
  return logrec_.Get(index);
}
inline ::com::spplus::buff::LogDataBean* GetGeneralLogDataMsg_Response::mutable_logrec(int index) {
  return logrec_.Mutable(index);
}
inline ::com::spplus::buff::LogDataBean* GetGeneralLogDataMsg_Response::add_logrec() {
  return logrec_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::LogDataBean >&
GetGeneralLogDataMsg_Response::logrec() const {
  return logrec_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::spplus::buff::LogDataBean >*
GetGeneralLogDataMsg_Response::mutable_logrec() {
  return &logrec_;
}

// optional uint32 rescode = 2;
inline bool GetGeneralLogDataMsg_Response::has_rescode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGeneralLogDataMsg_Response::set_has_rescode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGeneralLogDataMsg_Response::clear_has_rescode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGeneralLogDataMsg_Response::clear_rescode() {
  rescode_ = 0u;
  clear_has_rescode();
}
inline ::google::protobuf::uint32 GetGeneralLogDataMsg_Response::rescode() const {
  return rescode_;
}
inline void GetGeneralLogDataMsg_Response::set_rescode(::google::protobuf::uint32 value) {
  set_has_rescode();
  rescode_ = value;
}

// -------------------------------------------------------------------

// GetGeneralLogDataMsg

// optional .com.spplus.buff.GetGeneralLogDataMsg.Request request = 1;
inline bool GetGeneralLogDataMsg::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGeneralLogDataMsg::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGeneralLogDataMsg::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGeneralLogDataMsg::clear_request() {
  if (request_ != NULL) request_->::com::spplus::buff::GetGeneralLogDataMsg_Request::Clear();
  clear_has_request();
}
inline const ::com::spplus::buff::GetGeneralLogDataMsg_Request& GetGeneralLogDataMsg::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::com::spplus::buff::GetGeneralLogDataMsg_Request* GetGeneralLogDataMsg::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::com::spplus::buff::GetGeneralLogDataMsg_Request;
  return request_;
}
inline ::com::spplus::buff::GetGeneralLogDataMsg_Request* GetGeneralLogDataMsg::release_request() {
  clear_has_request();
  ::com::spplus::buff::GetGeneralLogDataMsg_Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void GetGeneralLogDataMsg::set_allocated_request(::com::spplus::buff::GetGeneralLogDataMsg_Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional .com.spplus.buff.GetGeneralLogDataMsg.Response response = 2;
inline bool GetGeneralLogDataMsg::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGeneralLogDataMsg::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGeneralLogDataMsg::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGeneralLogDataMsg::clear_response() {
  if (response_ != NULL) response_->::com::spplus::buff::GetGeneralLogDataMsg_Response::Clear();
  clear_has_response();
}
inline const ::com::spplus::buff::GetGeneralLogDataMsg_Response& GetGeneralLogDataMsg::response() const {
  return response_ != NULL ? *response_ : *default_instance_->response_;
}
inline ::com::spplus::buff::GetGeneralLogDataMsg_Response* GetGeneralLogDataMsg::mutable_response() {
  set_has_response();
  if (response_ == NULL) response_ = new ::com::spplus::buff::GetGeneralLogDataMsg_Response;
  return response_;
}
inline ::com::spplus::buff::GetGeneralLogDataMsg_Response* GetGeneralLogDataMsg::release_response() {
  clear_has_response();
  ::com::spplus::buff::GetGeneralLogDataMsg_Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline void GetGeneralLogDataMsg::set_allocated_response(::com::spplus::buff::GetGeneralLogDataMsg_Response* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace buff
}  // namespace spplus
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msgbody_2eproto__INCLUDED
